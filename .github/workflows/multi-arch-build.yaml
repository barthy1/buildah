name: build multi-arch images

on:
  push:
    branches: [ multi_arch_build_fix_1 ]
  schedule:
  - cron:  '0 8 * * *'
  # allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  multi:
    name: multi-arch Buildah build
    env:
      BUILDAH_QUAY_REGISTRY: quay.io/buildah
      CONTAINERS_QUAY_REGISTRY: quay.io/containers
      # list of architectures for build
      PLATFORMS: linux/amd64

    # build several images in parallel(upstream and stable)
    strategy:
      matrix:
        # where the Dockerfiles for builds are located at contrib/buildahimage directory
        source:
        - upstream
        - stable
    runs-on: ubuntu-latest
    # internal registry for temporary build before push
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host
          install: true

      - name: Build and push local Buildah
        uses: docker/build-push-action@v2
        with:
          context: contrib/buildahimage/${{ matrix.source }}
          file: ./contrib/buildahimage/${{ matrix.source }}/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            localhost:5000/buildah/${{ matrix.source }}

      # Simple verification that container works
      - name: amd64 container sniff test
        id: sniff_test
        run: |
          VERSION_OUTPUT="$(docker run localhost:5000/buildah/${{ matrix.source }} buildah version)"
          echo "$VERSION_OUTPUT"
          echo ::set-output name=version_output::$VERSION_OUTPUT

      # Generate image related info - names, labels, check whether to push
      - name: Generate image information
        id: image_info
        run: |
          # Have special environment variable for image name.
          # Names are different for upstream and stable Buildah images
          if [ "${{ matrix.source }}" == "upstream" ]; then
            # quay.io/buildah/upstream:main
            # Always push upstream image to buildah repository
            echo ::set-output name=buildah_push::'true'
            # Never push upstream image to containers repository
            echo ::set-output name=containers_push::'false'
            echo ::set-output name=buildah_tag::"${{ env.BUILDAH_QUAY_REGISTRY}}/${{ matrix.source }}:main"
          fi

          if [ "${{ matrix.source }}" == "stable" ]; then
            VERSION=v"$(echo "${{ steps.sniff_test.outputs.version_output }}" | head -n 1 | awk '{print $2}')"
            # quay.io/buildah/stable:vX.X.X
            # Check if stable image with current version already exists and make decision if new one needs to be pushed
            skopeo list-tags docker://${{ env.BUILDAH_QUAY_REGISTRY}}/${{ matrix.source }} | jq -r .Tags[] 
            PUSH=$(skopeo list-tags docker://${{ env.BUILDAH_QUAY_REGISTRY}}/${{ matrix.source }} | jq -r .Tags[] | grep -q "$VERSION" && echo 'false' || echo 'true')
            echo ::set-output name=buildah_push::${PUSH}
            echo ::set-output name=buildah_tag::"${{ env.BUILDAH_QUAY_REGISTRY}}/${{ matrix.source }}:${VERSION}"

            # quay.io/contaners/buildah:vX.X.X
            # Check if stable image with current version already exists and make decision if new one needs to be pushed
            PUSH=$(skopeo list-tags docker://${{ env.CONTAINERS_QUAY_REGISTRY}}/buildah| jq -r .Tags[] | grep -q "$VERSION" && echo 'false' || echo 'true')
            echo ::set-output name=containers_push::${PUSH}
            echo ::set-output name=containers_tag::"${{ env.CONTAINERS_QUAY_REGISTRY}}/buildah:${VERSION}"
          fi

          # Have labels environment variable to use it in the further steps.
          # Env variable is used to store multi-line value
          echo "LABELS<<EOF" >> $GITHUB_ENV
          echo "org.opencontainers.image.source=${{ github.event.repository.html_url }}" >> $GITHUB_ENV
          echo "org.opencontainers.image.revision=${{ github.sha }}" >> $GITHUB_ENV
          echo "org.opencontainers.image.created=$(date -u --iso-8601=seconds)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Separate steps to login and push for buildah and containers quay
      # repositories are required, because 2 sets of credentials are used and `docker
      # login` as well as `podman login` do not support having 2 different
      # credential sets for 1 registry.
      # At the same time reuse of non-shell steps is not supported by Github Actions via
      # anchors or composite actions

      # Push to buildah Quay repo stable and upstream Buildah
      - name: Login to buildah Quay registry
        uses: docker/login-action@v1
        if: ${{ steps.image_info.outputs.buildah_push == 'true' }}
        with:
          registry: ${{ env.BUILDAH_QUAY_REGISTRY }}
          username: ${{ secrets.BUILDAH_QUAY_USERNAME }}
          password: ${{ secrets.BUILDAH_QUAY_PASSWORD }}

      - name: Push images to buildah Quay
        uses: docker/build-push-action@v2
        if: ${{ steps.image_info.outputs.buildah_push == 'true' }}
        with:
          cache-from: type=registry,ref=localhost:5000/buildah/${{ matrix.source }}
          cache-to: type=inline
          context: contrib/buildahimage/${{ matrix.source }}
          file: ./contrib/buildahimage/${{ matrix.source }}/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.image_info.outputs.buildah_tag }}
          labels: |
            ${{ env.LABELS }}

      # Push to containers Quay repo only stable Buildah
      - name: Login to containers Quay registry
        if: ${{ steps.image_info.outputs.containers_push == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.CONTAINERS_QUAY_REGISTRY}}
          username: ${{ secrets.CONTAINERS_QUAY_USERNAME }}
          password: ${{ secrets.CONTAINERS_QUAY_PASSWORD }}

      - name: Push images to containers Quay
        if: ${{ steps.image_info.outputs.containers_push == 'true' }}
        uses: docker/build-push-action@v2
        with:
          cache-from: type=registry,ref=localhost:5000/buildah/${{ matrix.source }}
          cache-to: type=inline
          context: contrib/buildahimage/${{ matrix.source }}
          file: ./contrib/buildahimage/${{ matrix.source }}/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.image_info.outputs.containers_tag }}
          labels: |
            ${{ env.LABELS }}
